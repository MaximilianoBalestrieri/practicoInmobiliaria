@model practicoInmobiliaria.Models.Inmueble

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Editar Inmueble</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .titulo-formulario {
            background-color: #343a40;
            color: #fff;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            margin-bottom: 30px;
            font-size: 1.8rem;
        }

        .card {
            border-radius: 15px;
            border: none;
        }

        .form-label {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .form-control,
        .form-check-input {
            border-radius: 8px;
        }

        .form-check {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
        }

        .btn-lg {
            padding: 10px 30px;
            font-size: 1.1rem;
            border-radius: 10px;
        }

        .text-danger {
            font-size: 0.9rem;
        }

        .input-group button {
            border-radius: 0 8px 8px 0;
        }

        .input-group .form-control {
            border-radius: 8px 0 0 8px;
        }

        .formulario-chico {
            font-size: 0.75rem !important;
        }

            .formulario-chico .form-control,
            .formulario-chico .form-check-label,
            .formulario-chico .form-check-input,
            .formulario-chico .btn {
                font-size: 0.75rem !important;
            }

            .formulario-chico h2 {
                font-size: 1.2rem !important;
            }

            .formulario-chico label {
                font-size: 0.75rem !important;
            }

            .formulario-chico .btn-lg {
                font-size: 0.8rem !important;
                padding: 0.5rem 1rem !important;
            }

            /* Achicar el margen inferior entre inputs */
            .formulario-chico .mb-3 {
                margin-bottom: 0.3rem !important;
            }

            /* Ajustar separación entre filas si hace falta */
            .formulario-chico .row {
                margin-bottom: 0.5rem !important;
            }
    </style>
</head>
<body>
    <div class="container my-5">
        <div class="card shadow-lg w-75 mx-auto p-4">
            <div class="card-body formulario-chico">
                <h2 class="titulo-formulario">Editar Inmueble</h2>

                @using (Html.BeginForm("Edit", "Inmuebles", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.IdInmueble)

            <div class="row">
                <!-- DNI Propietario -->
                <div class="col-md-12 mb-3">
                    <label class="form-label">DNI Propietario</label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.DniPropietario, new { @class = "form-control", maxlength = "12", style = "max-width: 150px;", type = "number", id = "dniPropietarioInput" })

                        <div class="col-auto mb-3">
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalBuscarPropietario">
                                Buscar Propietario
                            </button>
                        </div>
                    </div>
                    <div id="nombrePropietarioSeleccionado" class="mt-2 text-success fw-bold"></div>
                    @Html.ValidationMessageFor(model => model.DniPropietario, "", new { @class = "text-danger" })
                </div>


                <!-- Línea: Calle, Número, Piso, Dpto, Localidad -->
                <div class="col-md-3 mb-3">
                    <label class="form-label">Calle</label>
                    @Html.TextBoxFor(model => model.Calle, new { @class = "form-control", style = "max-width: 250px;" })
                    @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 mb-3">
                    <label class="form-label">Número</label>
                    @Html.TextBoxFor(model => model.Nro, new { @class = "form-control", maxlength = "6", style = "max-width: 150px;" })
                    @Html.ValidationMessageFor(model => model.Nro, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 mb-3">
                    <label class="form-label">Piso</label>
                    @Html.TextBoxFor(model => model.Piso, new { @class = "form-control", maxlength = "4", style = "max-width: 50px;" })
                </div>
                <div class="col-md-2 mb-3">
                    <label class="form-label">Dpto</label>
                    @Html.TextBoxFor(model => model.Dpto, new { @class = "form-control", maxlength = "4", style = "max-width: 50px;" })
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Localidad</label>
                    @Html.TextBoxFor(model => model.Localidad, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Localidad, "", new { @class = "text-danger" })
                </div>

                <!-- Línea: Provincia, Uso, Tipo, Ambientes -->
                <div class="col-md-3 mb-3">
                    <label class="form-label">Provincia</label>
                    @Html.TextBoxFor(model => model.Provincia, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Provincia, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Uso</label>
                    @Html.TextBoxFor(model => model.Uso, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Uso, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Tipo</label>
                    @Html.TextBoxFor(model => model.Tipo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Ambientes</label>
                    @Html.TextBoxFor(model => model.Ambientes, new { @class = "form-control", maxlength = "4", style = "max-width: 50px;" })
                    @Html.ValidationMessageFor(model => model.Ambientes, "", new { @class = "text-danger" })
                </div>

                <!-- Línea: Latitud, Longitud, Parrilla, Pileta, Garage, Precio -->
                <div class="col-md-2 mb-3">
                    <label class="form-label">Latitud</label>
                    @Html.TextBoxFor(model => model.Latitud, new { @class = "form-control", maxlength = "6", style = "max-width: 150px;" })
                </div>
                <div class="col-md-2 mb-3">
                    <label class="form-label">Longitud</label>
                    @Html.TextBoxFor(model => model.Longitud, new { @class = "form-control", maxlength = "6", style = "max-width: 150px;" })
                </div>
                <div class="col-md-2 mb-3">
                    <div class="form-check mt-4">
                        @Html.CheckBoxFor(model => model.Parrilla, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.Parrilla, new { @class = "form-check-label" })
                    </div>
                </div>
                <div class="col-md-2 mb-3">
                    <div class="form-check mt-4">
                        @Html.CheckBoxFor(model => model.Pileta, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.Pileta, new { @class = "form-check-label" })
                    </div>
                </div>
                <div class="col-md-2 mb-3">
                    <div class="form-check mt-4">
                        @Html.CheckBoxFor(model => model.Garage, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.Garage, new { @class = "form-check-label" })
                    </div>
                </div>
                <div class="col-md-2 mb-3">
                    <label class="form-label">Precio</label>
                    @Html.TextBoxFor(model => model.Precio, new { @class = "form-control", style = "max-width: 150px;", type = "number", step = "any" })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>


                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-success btn-lg">Guardar</button>
                        <a href="@Url.Action("Index", "Inmuebles")" class="btn btn-outline-secondary btn-lg ms-2">Cancelar</a>
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger mt-3" })
            </div>
        </div>
    </div>
    <!-- Modal para buscar propietarios -->
    <div class="modal fade" id="modalBuscarPropietario" tabindex="-1" aria-labelledby="buscarPropietarioLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" style="font-size: 0.7rem !important;">

                <div class="modal-header">
                    <h5 class="modal-title">Buscar Propietario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <input type="text" id="terminoBusqueda" class="form-control mb-3" placeholder="Buscar por DNI, nombre o apellido..." />
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>DNI</th>
                                <th>Apellido</th>
                                <th>Nombre</th>
                                <th>Acción</th>
                            </tr>
                        </thead>
                        <tbody id="listaPropietarios">
                            <!-- Resultados se insertan aquí -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const inputBusqueda = document.getElementById("terminoBusqueda");
            let timeout;

            const modalElement = document.getElementById('modalBuscarPropietario');
            if (modalElement) {
                modalElement.addEventListener('shown.bs.modal', function () {
                    inputBusqueda?.focus();
                });
            }

            if (inputBusqueda) {
                inputBusqueda.addEventListener("input", function () {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => {
                        const termino = inputBusqueda.value;

                        fetch('/Propietarios/Buscar?termino=' + encodeURIComponent(termino))
                            .then(response => response.json())
                            .then(data => {
                                const lista = document.getElementById("listaPropietarios");
                                lista.innerHTML = "";

                                if (data.length === 0) {
                                    lista.innerHTML = `<tr><td colspan="4" class="text-center text-muted">No se encontraron resultados.</td></tr>`;
                                    return;
                                }

                                data.forEach(p => {
                                    const row = document.createElement("tr");
                                    row.innerHTML = `
                                        <td>${p.DniPropietario}</td>
                                        <td>${p.ApellidoPropietario}</td>
                                        <td>${p.NombrePropietario}</td>
                                        <td>
                                            <button class="btn btn-success" onclick="seleccionarPropietario('${p.DniPropietario}', '${p.NombrePropietario}', '${p.ApellidoPropietario}')">
                                                Seleccionar
                                            </button>
                                        </td>`;
                                    lista.appendChild(row);
                                });
                            })
                            .catch(error => console.error("Error en la búsqueda:", error));
                    }, 300);
                });
            }
        });

        function seleccionarPropietario(dni, nombre, apellido) {
            document.getElementById("dniPropietarioInput").value = dni;
            document.getElementById("nombrePropietarioSeleccionado").innerText = `Seleccionado: ${nombre} ${apellido}`;

            const modalElement = document.getElementById('modalBuscarPropietario');
            if (modalElement) {
                const modal = bootstrap.Modal.getOrCreateInstance(modalElement);
                modal.hide();
            }
        }
    </script>

</body>
</html>
